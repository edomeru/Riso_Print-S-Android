<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" 
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:controls="using:SmartDeviceApp.Controls">

    <Style x:Key="STYLE_AlignCenter" TargetType="FrameworkElement">
        <Setter Property="HorizontalAlignment" Value="Center"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
    </Style>

    <Style x:Key="STYLE_AlignLeft" TargetType="FrameworkElement">
        <Setter Property="HorizontalAlignment" Value="Left"/>
        <Setter Property="Margin">
            <Setter.Value>
                <Thickness Right="{StaticResource MARGIN_Default}"></Thickness>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="STYLE_AlignRight" TargetType="FrameworkElement">
        <Setter Property="HorizontalAlignment" Value="Right"/>
        <Setter Property="Margin">
            <Setter.Value>
                <Thickness Left="{StaticResource MARGIN_Default}"></Thickness>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="STYLE_AlignTop" TargetType="FrameworkElement">
        <Setter Property="VerticalAlignment" Value="Top"/>
        <Setter Property="Margin">
            <Setter.Value>
                <Thickness Bottom="{StaticResource MARGIN_Default}"></Thickness>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="STYLE_AlignBottom" TargetType="FrameworkElement">
        <Setter Property="VerticalAlignment" Value="Bottom"/>
        <Setter Property="Margin">
            <Setter.Value>
                <Thickness Top="{StaticResource MARGIN_Default}"></Thickness>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="STYLE_StackLeft" TargetType="StackPanel" BasedOn="{StaticResource STYLE_AlignLeft}">
        <Setter Property="Orientation" Value="Horizontal"/>
        <Setter Property="Margin">
            <Setter.Value>
                <Thickness Left="{StaticResource MARGIN_Default}"></Thickness>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="STYLE_StackRight" TargetType="StackPanel" BasedOn="{StaticResource STYLE_AlignRight}">
        <Setter Property="Orientation" Value="Horizontal"/>
        <Setter Property="Margin">
            <Setter.Value>
                <Thickness Right="{StaticResource MARGIN_Default}"></Thickness>
            </Setter.Value>
        </Setter>
    </Style>
    
    <Style x:Key="STYLE_StackCenter" TargetType="StackPanel">
        <Setter Property="Orientation" Value="Horizontal"/>
        <Setter Property="HorizontalAlignment" Value="Center"/>
    </Style>
    
    <Style x:Key="STYLE_StackTop" TargetType="StackPanel" BasedOn="{StaticResource STYLE_AlignTop}">
        <Setter Property="Orientation" Value="Vertical"/>
        <Setter Property="Margin">
            <Setter.Value>
                <Thickness Bottom="{StaticResource MARGIN_Default}"></Thickness>
            </Setter.Value>
        </Setter>
    </Style>
    
    <Style x:Key="STYLE_StackBottom" TargetType="StackPanel" BasedOn="{StaticResource STYLE_AlignBottom}">
        <Setter Property="Orientation" Value="Vertical"/>
        <Setter Property="Margin">
            <Setter.Value>
                <Thickness Top="{StaticResource MARGIN_Default}"></Thickness>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="STYLE_TitleBarButton" TargetType="Button">
        <Setter Property="Foreground" Value="{ThemeResource AppBarItemForegroundThemeBrush}"/>
        <Setter Property="FontFamily" Value="{ThemeResource ContentControlThemeFontFamily}"/>
        <Setter Property="FontWeight" Value="Normal"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Grid x:Name="RootGrid" Background="Transparent">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal"/>
                                <VisualState x:Name="PointerOver">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Fill" Storyboard.TargetName="Ellipse">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource AppBarItemPointerOverBackgroundThemeBrush}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Foreground" Storyboard.TargetName="Content">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource AppBarItemPointerOverForegroundThemeBrush}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Pressed">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Stroke" Storyboard.TargetName="Ellipse">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource AppBarItemForegroundThemeBrush}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Fill" Storyboard.TargetName="Ellipse">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource AppBarItemForegroundThemeBrush}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Foreground" Storyboard.TargetName="Content">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource AppBarItemPressedForegroundThemeBrush}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility" Storyboard.TargetName="RootGrid">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="Collapsed"/>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="FocusStates">
                                <VisualState x:Name="Focused">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="FocusVisualWhite"/>
                                        <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="FocusVisualBlack"/>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Unfocused"/>
                                <VisualState x:Name="PointerFocused"/>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Grid Height="40" Width="40">
                            <Ellipse x:Name="Ellipse" Fill="{ThemeResource AppBarItemBackgroundThemeBrush}" Stroke="{ThemeResource AppBarItemForegroundThemeBrush}" StrokeThickness="2" UseLayoutRounding="False"/>
                            <ContentPresenter x:Name="Content" Foreground="{TemplateBinding Foreground}" HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
                                <PathIcon Data="F1 M 17.4126,18L 24.0752,11L 17.6558,11L 8.77931,20.4678L 8.77931,20.5322L 17.6558,30L 24.0752,30L 17.4126,23L 32,23L 32,18L 17.4126,18 Z "/>
                            </ContentPresenter>
                        </Grid>
                        <Rectangle x:Name="FocusVisualWhite" IsHitTestVisible="False" Opacity="0" StrokeDashOffset="1.5" StrokeEndLineCap="Square" Stroke="{ThemeResource FocusVisualWhiteStrokeThemeBrush}" StrokeDashArray="1,1"/>
                        <Rectangle x:Name="FocusVisualBlack" IsHitTestVisible="False" Opacity="0" StrokeDashOffset="0.5" StrokeEndLineCap="Square" Stroke="{ThemeResource FocusVisualBlackStrokeThemeBrush}" StrokeDashArray="1,1"/>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="STYLE_TitleBarLeftButton" TargetType="Button" BasedOn="{StaticResource STYLE_TitleBarButton}">
        <Style.Setters>
            <Setter Property="Margin">
                <Setter.Value>
                    <Thickness Right="{StaticResource MARGIN_Default}"></Thickness>
                </Setter.Value>
            </Setter>
        </Style.Setters>
    </Style>

    <Style x:Key="STYLE_TitleBarRightButton" TargetType="Button" BasedOn="{StaticResource STYLE_TitleBarButton}">
        <Style.Setters>
            <Setter Property="Margin">
                <Setter.Value>
                    <Thickness Left="{StaticResource MARGIN_Default}"></Thickness>
                </Setter.Value>
            </Setter>
        </Style.Setters>
    </Style>

    <Style x:Key="STYLE_TitleBarSidePane" TargetType="Grid">
        <Style.Setters>
            <Setter Property="Background" Value="{StaticResource BRUSH_Purple2}"/>
        </Style.Setters>
    </Style>
    
    <Style  x:Key="STYLE_ListViewItem" TargetType="ListViewItem">
        <Setter Property="FontFamily" Value="{ThemeResource ContentControlThemeFontFamily}" />
        <Setter Property="FontSize" Value="{ThemeResource ControlContentThemeFontSize}" />
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="TabNavigation" Value="Local"/>
        <Setter Property="IsHoldingEnabled" Value="True"/>
        <Setter Property="Margin" Value="0,0,0,0"/>
        <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
        <Setter Property="VerticalContentAlignment" Value="Top"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ListViewItem">
                    <Border x:Name="OuterContainer">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal"/>
                                <VisualState x:Name="PointerOver"/>
                                <VisualState x:Name="Pressed"/>
                                <VisualState x:Name="PointerOverPressed"/>
                                <VisualState x:Name="Disabled"/>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="FocusStates">
                                <VisualState x:Name="Focused"/>
                                <VisualState x:Name="Unfocused"/>
                                <VisualState x:Name="PointerFocused"/>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="SelectionHintStates">
                                <VisualState x:Name="VerticalSelectionHint"/>
                                <VisualState x:Name="HorizontalSelectionHint"/>
                                <VisualState x:Name="NoSelectionHint"/>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="SelectionStates">
                                <VisualState x:Name="Unselecting"/>
                                <VisualState x:Name="Unselected"/>
                                <VisualState x:Name="UnselectedPointerOver"/>
                                <VisualState x:Name="UnselectedSwiping"/>
                                <VisualState x:Name="Selecting"/>
                                <VisualState x:Name="Selected"/>
                                <VisualState x:Name="SelectedSwiping"/>
                                <VisualState x:Name="SelectedUnfocused"/>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="DragStates">
                                <VisualState x:Name="NotDragging"/>
                                <VisualState x:Name="Dragging"/>
                                <VisualState x:Name="DraggingTarget"/>
                                <VisualState x:Name="MultipleDraggingPrimary"/>
                                <VisualState x:Name="MultipleDraggingSecondary"/>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="ReorderHintStates">
                                <VisualState x:Name="NoReorderHint"/>
                                <VisualState x:Name="BottomReorderHint"/>
                                <VisualState x:Name="TopReorderHint"/>
                                <VisualState x:Name="RightReorderHint"/>
                                <VisualState x:Name="LeftReorderHint"/>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="DataVirtualizationStates">
                                <VisualState x:Name="DataAvailable"/>
                                <VisualState x:Name="DataPlaceholder"/>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Grid>
                            <ContentPresenter x:Name="contentPresenter"
										  ContentTransitions="{TemplateBinding ContentTransitions}"
										  ContentTemplate="{TemplateBinding ContentTemplate}"
										  Content="{TemplateBinding Content}"
										  HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
										  VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
										  Margin="0" />
                            <!-- The 'Xg' text simulates the amount of space one line of text will occupy.
							 In the DataPlaceholder state, the Content is not loaded yet so we
							 approximate the size of the item using placeholder text. -->
                            <TextBlock x:Name="PlaceholderTextBlock"
								   Opacity="0"
								   Text="Xg"
								   Foreground="{x:Null}"
								   Margin="0"
								   IsHitTestVisible="False"
								   AutomationProperties.AccessibilityView="Raw"
                                   Visibility="Collapsed"/>
                            <Rectangle x:Name="PlaceholderRect"
								   Visibility="Collapsed"
								   Fill="{ThemeResource ListViewItemPlaceholderBackgroundThemeBrush}"/>
                            <Rectangle x:Name="MultiArrangeOverlayBackground"
								   IsHitTestVisible="False"
								   Opacity="0"
                                   Visibility="Collapsed"
								   Fill="{ThemeResource ListViewItemDragBackgroundThemeBrush}" />
                        </Grid>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="STYLE_ListValue_TextBox" TargetType="TextBox">
        <Setter Property="Margin">
            <Setter.Value>
                <Thickness Top="{StaticResource MARGIN_Medium}"
                        Bottom="{StaticResource MARGIN_Medium}"></Thickness>
            </Setter.Value>
        </Setter>
        <Setter Property="IsReadOnly" Value="False"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="AcceptsReturn" Value="False"/>
        <Setter Property="TextWrapping" Value="NoWrap"/>
        <Setter Property="FontSize" Value="16"/>
        <Setter Property="Padding" Value="6"/>
    </Style>

    <Style x:Key="STYLE_ListValue_PasswordBox" TargetType="PasswordBox">
        <Setter Property="Margin">
            <Setter.Value>
                <Thickness Top="{StaticResource MARGIN_Medium}"
                        Bottom="{StaticResource MARGIN_Medium}"></Thickness>
            </Setter.Value>
        </Setter>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Padding" Value="6"/>
    </Style>

    <Style x:Key="STYLE_ListValue_ToggleSwitch" TargetType="ToggleSwitch">
        <Setter Property="Width" Value="{StaticResource SIZE_ListValue_ToggleWidth}"/>
        <Setter Property="Foreground" Value="{ThemeResource ToggleSwitchForegroundThemeBrush}"/>
        <Setter Property="HorizontalAlignment" Value="Left"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="HorizontalContentAlignment" Value="Left"/>
        <Setter Property="MinWidth" Value="70"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ToggleSwitch">
                    <Grid Background="Transparent" ManipulationMode="None" Width="70" Height="50" >
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal"/>
                                <VisualState x:Name="PointerOver"/>
                                <VisualState x:Name="Pressed"/>
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Fill" Storyboard.TargetName="SwitchKnob">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ToggleSwitchThumbDisabledBackgroundThemeBrush}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Stroke" Storyboard.TargetName="SwitchKnob">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ToggleSwitchThumbDisabledBorderThemeBrush}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="ToggleStates">
                                <VisualStateGroup.Transitions>
                                    <VisualTransition x:Name="DraggingToOnTransition" From="Dragging" To="On" GeneratedDuration="0">
                                        <Storyboard>
                                            <!--<RepositionThemeAnimation TargetName="SwitchKnob" FromHorizontalOffset="0" />-->
                                        </Storyboard>
                                    </VisualTransition>
                                    <VisualTransition x:Name="DraggingToOffTransition" From="Dragging" To="Off" GeneratedDuration="0">
                                        <Storyboard>
                                            <!--<RepositionThemeAnimation TargetName="SwitchKnob" FromHorizontalOffset="0" />-->
                                        </Storyboard>
                                    </VisualTransition>
                                    <VisualTransition x:Name="OnToOffTransition" From="On" To="Off" GeneratedDuration="0">
                                        <Storyboard>
                                            <!--<RepositionThemeAnimation TargetName="SwitchKnob" FromHorizontalOffset="20" />-->
                                        </Storyboard>
                                    </VisualTransition>
                                    <VisualTransition x:Name="OffToOnTransition" From="Off" To="On" GeneratedDuration="0">
                                        <Storyboard>
                                            <!--<RepositionThemeAnimation TargetName="SwitchKnob" FromHorizontalOffset="0" />-->
                                        </Storyboard>
                                    </VisualTransition>
                                </VisualStateGroup.Transitions>
                                <VisualState x:Name="Dragging" />
                                <VisualState x:Name="Off">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.Fill)" Storyboard.TargetName="OuterBounds">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource BRUSH_Gray4}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="On">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0" To="20" Storyboard.TargetProperty="X" Storyboard.TargetName="KnobTranslateTransform"/>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="ContentStates">
                                <VisualState x:Name="OffContent"/>
                                <VisualState x:Name="OnContent"/>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="FocusStates">
                                <VisualState x:Name="Focused"/>
                                <VisualState x:Name="Unfocused"/>
                                <VisualState x:Name="PointerFocused"/>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Grid x:Name="SwitchKnobBounds" Margin="10" Width="50" Height="30">
                            <Rectangle x:Name="OuterBounds" Fill="{StaticResource BRUSH_Purple2}" HorizontalAlignment="Left" Height="30" VerticalAlignment="Top" Width="50" RadiusY="15" RadiusX="15"/>
                            <Ellipse x:Name="SwitchKnob" Fill="{StaticResource BRUSH_White}" HorizontalAlignment="Left" Width="24" Height="24" Margin="3,0,0,0">
                                <Ellipse.RenderTransform>
                                    <TranslateTransform x:Name="KnobTranslateTransform"/>
                                </Ellipse.RenderTransform>
                            </Ellipse>
                        </Grid>
                        <Thumb x:Name="SwitchThumb" AutomationProperties.AccessibilityView="Raw" Width="70" HorizontalAlignment="Left" Height="50">
                            <Thumb.Template>
                                <ControlTemplate TargetType="Thumb">
                                    <Rectangle Fill="Transparent"/>
                                </ControlTemplate>
                            </Thumb.Template>
                        </Thumb>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="STYLE_ListHeaderGrid" TargetType="Grid">
        <Style.Setters>
            <Setter Property="Background" Value="{StaticResource BRUSH_Gray4}"/>
            <Setter Property="Height" Value="{StaticResource SIZE_ListItemHeight}"/>
        </Style.Setters>
    </Style>

    <Style x:Key="STYLE_ProgressRing" TargetType="ProgressRing">
        <Style.Setters>
            <Setter Property="Width" Value="{StaticResource SIZE_ProgressRing}"/>
            <Setter Property="Height" Value="{StaticResource SIZE_ProgressRing}"/>
            <Setter Property="Foreground" Value="{StaticResource BRUSH_Purple2}"/>
        </Style.Setters>
    </Style>

    <Style x:Key="STYLE_List_Separator" TargetType="Path">
        <Style.Setters>
            <Setter Property="Stroke" Value="{StaticResource BRUSH_Gray1}"/>
            <Setter Property="StrokeThickness" Value="1"/>
        </Style.Setters>
    </Style>

</ResourceDictionary>
