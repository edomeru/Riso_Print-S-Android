apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply from: 'coverage.gradle'

android {
    compileSdkVersion 33
    buildToolsVersion '33.0.0'

    defaultConfig {
        applicationId "jp.co.riso.smartprint"
        minSdkVersion 28
        targetSdkVersion 33
        versionCode 50800001
        versionName "v5.8.0.1"

        testApplicationId "jp.co.riso.smartprint.test"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

        ndkVersion '25.1.8937393'
        externalNativeBuild {
            ndk {
                moduleName "common"
                abiFilters 'armeabi-v7a', 'arm64-v8a', 'x86', 'x86_64'
            }
        }
    }

    sourceSets.main {
        jniLibs.srcDir 'src/main/libs'
    }

    buildTypes {
        debug {
            testCoverageEnabled true
        }

        release {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-project.txt'
        }
    }

    lint {
        abortOnError false
        checkReleaseBuilds false
        disable 'GradleDependency', 'InconsistentLayout', 'InflateParams', 'SpUsage'
    }

    // Gradle automatically adds 'android.test.runner' as a dependency.
    useLibrary 'android.test.runner'
    useLibrary 'android.test.base'
    useLibrary 'android.test.mock'
    namespace 'jp.co.riso.smartprint'
    ndkVersion '25.1.8937393'
}

dependencies {
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'
    implementation 'org.jacoco:org.jacoco.build:0.8.6'
    implementation 'androidx.exifinterface:exifinterface:1.0.0'
    implementation 'androidx.appcompat:appcompat:1.0.0'
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'
    implementation 'androidx.preference:preference-ktx:1.1.1'
    implementation 'androidx.vectordrawable:vectordrawable:1.1.0'
    implementation 'androidx.vectordrawable:vectordrawable-animated:1.1.0'

    androidTestImplementation files('libs/the-missing-android-xml-junit-test-runner-release-1.3_2.jar')

    // 3rd-party libraries
    implementation project(':scanlibrary')

    // test dependencies
    implementation 'androidx.test.uiautomator:uiautomator:2.2.0'
    androidTestImplementation 'androidx.test.ext:junit:1.1.3'

    // Espresso dependencies
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.5.0-alpha07'
    androidTestImplementation 'androidx.test.espresso:espresso-intents:3.1.0'
    
    // Kotlin dependencies
    implementation "androidx.core:core-ktx:1.7.0"
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    implementation "androidx.activity:activity-ktx:1.4.0"
    implementation "androidx.fragment:fragment-ktx:1.4.1"
    androidTestImplementation 'androidx.test:rules:1.4.1-alpha07'
    androidTestImplementation 'androidx.test:core:1.5.0-alpha02'
}

// Returns NDK build command based on development OS
import org.apache.tools.ant.taskdefs.condition.Os

def getNdkBuildCmd() {
    def ndkDir = android.getNdkDirectory()
//    def ndkDir = plugins.getPlugin('com.android.application').sdkHandler.getNdkFolder()
    if (Os.isFamily(Os.FAMILY_WINDOWS)) {
        return "${ndkDir}${File.separator}ndk-build.cmd"
    } else {
        return "${ndkDir}${File.separator}ndk-build"
    }
}

// Temporary NDK build task until full support is added by Google.
task ndkBuild(type: Exec) {
    // In NDK r22, there is bug which causes warning in ndk-build if output-sync is enabled
    // https://github.com/android/ndk/issues/1492
    // workaround is to disable it by adding --output-sync=none
    commandLine getNdkBuildCmd(), '--output-sync=none', '-C', file('src/main/jni').absolutePath
}

task ndkClean(type: Exec) {
    // In NDK r22, there is bug which causes warning in ndk-build if output-sync is enabled
    // https://github.com/android/ndk/issues/1492
    // workaround is to disable it by adding --output-sync=none
    commandLine getNdkBuildCmd(), '--output-sync=none', '-C', file('src/main/jni').absolutePath, 'clean'
}

tasks.withType(JavaCompile) {
    compileTask -> compileTask.dependsOn ndkBuild
}

clean.dependsOn ndkClean
